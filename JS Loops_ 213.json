{
    "course": {
        "id": "213",
        "name": "JS Loops",
        "logo": "https://merakilearn.s3.ap-south-1.amazonaws.com/coursev2_images/Javascript/js_loops.jpg",
        "notes": null,
        "days_to_complete": null,
        "short_description": "We will discuss about different types of loops in javascript.",
        "type": "js",
        "course_type": "json",
        "lang_available": [
            "en"
        ],
        "exercises": [
            {
                "id": "6302",
                "parent_exercise_id": "6302",
                "course_id": "213",
                "name": "While-loop",
                "slug": "js-loops_json__Types-of-loops/While-loop_json",
                "sequence_num": 300,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/js-loops_json/Types-of-loops/While-loop.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Example:"
                    },
                    {
                        "component": "code",
                        "type": "javascript",
                        "title": "",
                        "value": "var count = 1;<br>while (count < 10) {<br>   console.log(count);<br>   count +=2;<br>}<br><br>// Output :<br><br>// 1<br>// 3<br>// 5<br>// 7<br>// 9<br>"
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Explanation:"
                    },
                    {
                        "component": "text",
                        "value": "count +=2 really just means count = count + 2."
                    },
                    {
                        "component": "text",
                        "value": "When this <span style=\"\">loop</span> runs the first time, the value of count is 1, therefore count is printed"
                    },
                    {
                        "component": "text",
                        "value": "When this <span style=\"\">loop</span> runs the second time, the value of count is 3, therefore count is printed"
                    },
                    {
                        "component": "text",
                        "value": "When this <span style=\"\">loop</span> runs the third time, the value of count is 5, therefore count is printed"
                    },
                    {
                        "component": "text",
                        "value": "When this <span style=\"\">loop</span> runs the fourth time, the value of count is 7, therefore count is printed"
                    },
                    {
                        "component": "text",
                        "value": "When this <span style=\"\">loop</span> runs the fifth time, the value of count is 9, therefore count is printed"
                    },
                    {
                        "component": "text",
                        "value": "When this <span style=\"\">loop</span> runs the sixth time, the value of count is 11. Clearly, 11&gt;10, so the while <span style=\"\">loop</span> will stop."
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "Note"
                    },
                    {
                        "component": "text",
                        "value": "While <span style=\"\">loop</span> helps us to <span style=\"\">execute</span> a block of <span style=\"\">code</span>. While runs upto a specified condition is <span style=\"\">true</span> and stops once that condition is no longer <span style=\"\">true</span>."
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Example:"
                    },
                    {
                        "component": "code",
                        "type": "javascript",
                        "title": "",
                        "value": "<br>var i=0;<br>while (i<7){<br>    if(i%2==0){<br>console.log(i)<br>    }<br>    i++;<br>}<br> <br><br>// Output:<br>// 0<br>// 2<br>// 4<br>// 6<br>"
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Explanation:"
                    },
                    {
                        "component": "text",
                        "value": "When this <span style=\"\">loop</span> runs the first time, the value of i is 0, 0&lt; 7 is <span style=\"\">true</span>, 0%2 ==0 <span style=\"\">true</span> ,therefore i is printed, and incremented i to 1"
                    },
                    {
                        "component": "text",
                        "value": "When this <span style=\"\">loop</span> runs the second time, the value of i is 1, 1&lt;7 <span style=\"\">true</span>, 1%2 ==0 <span style=\"\">false</span>, therefore i is not printed, and directly incremented to 2"
                    },
                    {
                        "component": "text",
                        "value": "When this <span style=\"\">loop</span> runs the third time, the value of i is 2, 2&lt; 7 is <span style=\"\">true</span>, 2%2 ==0 <span style=\"\">true</span> ,therefore i is printed, and incremented i to 3"
                    },
                    {
                        "component": "text",
                        "value": "When this <span style=\"\">loop</span> runs the fourth time, the value of i is 3, 3&lt;7 <span style=\"\">true</span>, 3%2 ==0 <span style=\"\">false</span>, therefore i is not printed, and directly incremented to 4"
                    },
                    {
                        "component": "text",
                        "value": "When this <span style=\"\">loop</span> runs the fifth time, the value of i is 4, 4&lt; 7 is <span style=\"\">true</span>, 4%2 ==0 <span style=\"\">true</span> ,therefore i is printed, and incremented i to 5"
                    },
                    {
                        "component": "text",
                        "value": "When this <span style=\"\">loop</span> runs the sixth time,the value of i is 5, 5&lt;7 <span style=\"\">true</span>, 5%2 ==0 <span style=\"\">false</span>, therefore i is not printed, and directly incremented to 6"
                    },
                    {
                        "component": "text",
                        "value": "When this <span style=\"\">loop</span> runs the seventh time, the value of i is 6, 6&lt; 7 is <span style=\"\">true</span>, 6%2 ==0 <span style=\"\">true</span> ,therefore i is printed, and incremented i to 7"
                    },
                    {
                        "component": "text",
                        "value": "When this <span style=\"\">loop</span> runs the eighth time, the value of i is 7, clearly 7&lt;7 is <span style=\"\">false</span> so the <span style=\"\">loop</span> breaks here."
                    }
                ]
            },
            {
                "id": "6323",
                "parent_exercise_id": "6302",
                "course_id": "213",
                "name": "For-loop",
                "slug": "js-loops_json__Types-of-loops/For-loop_json",
                "sequence_num": 301,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/js-loops_json/Types-of-loops/For-loop.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Example:"
                    },
                    {
                        "component": "code",
                        "type": "javascript",
                        "title": "",
                        "value": "for(var i = 0; i < 3; i++){<br>   console.log(i)<br>}<br>// Output :-<br>// 0<br>// 1<br>// 2    <br>"
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Explanation:"
                    },
                    {
                        "component": "text",
                        "value": "When this <span style=\"\">loop</span> runs the first time, the value of i is 0, 0&lt;3 is <span style=\"\">true</span>, and it is incremented due to i++, i value will become 1, therefore i is printed"
                    },
                    {
                        "component": "text",
                        "value": "When this <span style=\"\">loop</span> runs the second time, the value of i is 1, 1&lt;3 is <span style=\"\">true</span>, and it is incremented due to i++,i value will become 2, therefore i is printed"
                    },
                    {
                        "component": "text",
                        "value": "When this <span style=\"\">loop</span> runs the third time, the value of i is 2, 2&lt;3 is <span style=\"\">true</span>, and it is incremented due to i++,i value will become 3, therefore i is printed"
                    },
                    {
                        "component": "text",
                        "value": "When this <span style=\"\">loop</span> runs the fourth time, the value of i is 3. Clearly, 3&lt;3, so the for <span style=\"\">loop</span> will stop."
                    },
                    {
                        "component": "text",
                        "value": "When we are using a for <span style=\"\">loop</span>, we can in one line initialize the <span style=\"\">variable</span>, give the condition, and increment or decrement the <span style=\"\">variable</span>. For <span style=\"\">loop</span> runs for a specific number of times."
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Example:"
                    },
                    {
                        "component": "code",
                        "type": "javascript",
                        "title": "",
                        "value": "for(var n=9;n>0;n--){<br>   console.log(n)<br>}<br><br>// Output:-<br>// 9<br>// 8<br>// 7<br>// 6<br>// 5<br>// 4<br>// 3<br>// 2<br>// 1<br>"
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Explanation:"
                    },
                    {
                        "component": "text",
                        "value": "When this <span style=\"\">loop</span> runs the first time, the value of n is 9, n&gt;0 is <span style=\"\">true</span>, and it is decremented due to n--, n value will become 8, therefore i is printed"
                    },
                    {
                        "component": "text",
                        "value": "When this <span style=\"\">loop</span> runs the second time, the value of n is 8, n&gt;0 is <span style=\"\">true</span>, and it is decremented due to n--,n value will become 7, therefore i is printed"
                    },
                    {
                        "component": "text",
                        "value": "When this <span style=\"\">loop</span> runs the third time, the value of n is 7, n&gt;0 is <span style=\"\">true</span>, and it is decremented due to n--, n value will become 6, therefore i is printed"
                    },
                    {
                        "component": "text",
                        "value": "When this <span style=\"\">loop</span> runs the fourth time, the value of n is 6, n&gt;0 is <span style=\"\">true</span>, and it is decremented due to n--, n value will become 5, therefore i is printed"
                    },
                    {
                        "component": "text",
                        "value": "\u2026."
                    },
                    {
                        "component": "text",
                        "value": "\u2026."
                    },
                    {
                        "component": "text",
                        "value": "\u2026."
                    },
                    {
                        "component": "text",
                        "value": "\u2026."
                    },
                    {
                        "component": "text",
                        "value": "\u2026."
                    },
                    {
                        "component": "text",
                        "value": "When this <span style=\"\">loop</span> runs the tenth time, the value of n is 0, 0&gt;0 is <span style=\"\">false</span>, and the <span style=\"\">loop</span> breaks."
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Example :"
                    },
                    {
                        "component": "code",
                        "type": "javascript",
                        "title": "",
                        "value": "for (var s=25;s<=30;s++){<br>   console.log(s)<br>}<br><br><br>// Output:-<br>// 25<br>// 26<br>// 27<br>// 28<br>// 29<br>// 30"
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Explanation:"
                    },
                    {
                        "component": "text",
                        "value": "When this <span style=\"\">loop</span> runs the first time, the value of s is 25, 25&lt;=30 is <span style=\"\">true</span>, and it is incremented due to i++, i value will become 26, therefore 25 is printed"
                    },
                    {
                        "component": "text",
                        "value": "When this <span style=\"\">loop</span> runs the second time, the value of i is 26, 26&lt;=30 is <span style=\"\">true</span>, and it is incremented due to i++,i value will become 27, therefore 26 is printed"
                    },
                    {
                        "component": "text",
                        "value": "When this <span style=\"\">loop</span> runs the third time, the value of i is 27, 27&lt;=30 is <span style=\"\">true</span>, and it is incremented due to i++,i value will become 28, therefore 27 is printed"
                    },
                    {
                        "component": "text",
                        "value": "When this <span style=\"\">loop</span> runs the third time, the value of i is 28, 28&lt;=30 is <span style=\"\">true</span>, and it is incremented due to i++,i value will become 29, therefore 28 is printed"
                    },
                    {
                        "component": "text",
                        "value": "When this <span style=\"\">loop</span> runs the third time, the value of i is 29, 29&lt;=30 is <span style=\"\">true</span>, and it is incremented due to i++,i value will become 30, therefore 29 is printed"
                    },
                    {
                        "component": "text",
                        "value": "When this <span style=\"\">loop</span> runs the third time, the value of i is 30, 30&lt;=30 is <span style=\"\">true</span>, and it is incremented due to i++,i value will become 31, therefore 30 is printed"
                    },
                    {
                        "component": "text",
                        "value": "When this <span style=\"\">loop</span> runs the fourth time, the value of i is 3. Clearly, 31&lt;=30 <span style=\"\">false</span>, so the for <span style=\"\">loop</span> will stop."
                    }
                ]
            },
            {
                "id": "6319",
                "parent_exercise_id": "6302",
                "course_id": "213",
                "name": "Do-while-loop",
                "slug": "js-loops_json__Types-of-loops/Do-while-loop_json",
                "sequence_num": 302,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/js-loops_json/Types-of-loops/Do-while-loop.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Example:"
                    },
                    {
                        "component": "code",
                        "type": "javascript",
                        "title": "",
                        "value": "var i=1<br>do{<br>  if(i%2==1){<br>  console.log(i)<br>  }<br>  i++<br>}<br>while (i <=10)<br><br>// Output:<br>// 1<br>// 3<br>// 5<br>// 7<br>// 9"
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Explanation:"
                    },
                    {
                        "component": "text",
                        "value": "When i = 1, i%2 =1, and 1==1 <span style=\"\">true</span>, therefore, 1 is printed. After that it is incremented to 2."
                    },
                    {
                        "component": "text",
                        "value": "When i = 2, now it will check for <span style=\"\">loop</span> condition 2&lt;=10 this is <span style=\"\">true</span>, and it will go to do again, i%2  is 0 not 1, therefore, nothing is printed. After that it is incremented to 3."
                    },
                    {
                        "component": "text",
                        "value": "When i = 3, now it will check for <span style=\"\">loop</span> condition 3&lt;=10 this is <span style=\"\">true</span>, and it will go to do again, i%2==1 <span style=\"\">true</span>, therefore, 3 is printed. After that it is incremented to 4."
                    },
                    {
                        "component": "text",
                        "value": "When i = 4, now it will check for <span style=\"\">loop</span> condition 4&lt;=10 this is <span style=\"\">true</span>, and it will go to do again, i%2  is 0 not 1, therefore, nothing is printed. After that it is incremented to 5."
                    },
                    {
                        "component": "text",
                        "value": "When i = 5 now it will check for <span style=\"\">loop</span> condition 5&lt;=10 this is <span style=\"\">true</span>, and it will go to do again, i%2==1 <span style=\"\">true</span>, therefore, 5 is printed. After that it is incremented to 6."
                    },
                    {
                        "component": "text",
                        "value": "When i = 6, now it will check for <span style=\"\">loop</span> condition 6&lt;=10 this is <span style=\"\">true</span>, and it will go to do again, i%2  is 0 not 1, therefore, nothing is printed. After that it is incremented to 7."
                    },
                    {
                        "component": "text",
                        "value": "When i = 7 now it will check for <span style=\"\">loop</span> condition 7&lt;=10 this is <span style=\"\">true</span>, and it will go to do again, i%2==1 <span style=\"\">true</span>, therefore, 7 is printed. After that it is incremented to 8."
                    },
                    {
                        "component": "text",
                        "value": "When i = 8, now it will check for <span style=\"\">loop</span> condition 8&lt;=10 this is <span style=\"\">true</span>, and it will go to do again, i%2  is 0 not 1, therefore, nothing is printed. After that it is incremented to 9."
                    },
                    {
                        "component": "text",
                        "value": "When i = 9 now it will check for <span style=\"\">loop</span> condition 9&lt;=10 this is <span style=\"\">true</span>, and it will go to do again, i%2==1 <span style=\"\">true</span>, therefore, 9 is printed. After that it is incremented to 10."
                    },
                    {
                        "component": "text",
                        "value": "When i = 10, now it will check for <span style=\"\">loop</span> condition 10&lt;=10 this is <span style=\"\">true</span>, and it will go to do again, i%2  is 0 not 1, therefore, nothing is printed. After that it is incremented to 11."
                    },
                    {
                        "component": "text",
                        "value": "When i = 11 now it will check for <span style=\"\">loop</span> condition 11&lt;=10 clearly this is <span style=\"\">false</span>, and it won\u2019t go further."
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "Note"
                    },
                    {
                        "component": "text",
                        "value": "The do while <span style=\"\">loop</span> is a variant of the while <span style=\"\">loop</span> which evaluates the condition at the end of each <span style=\"\">loop</span> iteration."
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Example:"
                    },
                    {
                        "component": "code",
                        "type": "javascript",
                        "title": "",
                        "value": "let m=5;<br>let n=1<br>do{<br>   console.log(m*n)<br>n++<br>}        <br>while(n<=4)<br><br>// Output:<br>// 5<br>// 10<br>// 15<br>// 20"
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Explanation:"
                    },
                    {
                        "component": "text",
                        "value": "m = 5, n = 1, m*n = 5, n++ is 2, 2&lt;=10, so <span style=\"\">loop</span> will <span style=\"\">execute</span> another time."
                    },
                    {
                        "component": "text",
                        "value": "n=2, 2&lt;=4 <span style=\"\">true</span>, m=5, m<i>n(5</i>2) is 10, so 10 is printed and n incremented to 3 "
                    },
                    {
                        "component": "text",
                        "value": "n=3, 3&lt;=4 <span style=\"\">true</span>, m=5, m<i>n(5</i>3) is 15, so 15 is printed and n incremented to 4"
                    },
                    {
                        "component": "text",
                        "value": "n=2, 4&lt;=4 <span style=\"\">true</span>, m=5, m<i>n(5</i>4) is 20, so 20 is printed and n incremented to 5"
                    },
                    {
                        "component": "text",
                        "value": "n=5, 5&lt;=4 is <span style=\"\">false</span> so <span style=\"\">loop</span> will stop. "
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Example:"
                    },
                    {
                        "component": "code",
                        "type": "javascript",
                        "title": "",
                        "value": "let sum=0<br>let i=0<br>do{<br>  sum=sum+i <br>  console.log(sum)<br>  i++<br>}<br>while(i<=10)<br><br>// Output :-<br>  <br>// 0<br>// 1<br>// 3<br>// 6<br>// 10<br>// 15<br>// 21<br>// 28<br>// 36<br>// 45<br>// 55"
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Explanation:"
                    },
                    {
                        "component": "text",
                        "value": "In this <span style=\"\">code</span> i is initial <span style=\"\">variable</span> it starts from 0 and it will run till 10 "
                    },
                    {
                        "component": "text",
                        "value": "sum is another <span style=\"\">variable</span> for storing the value of  (sum+i) this operation. every time sum value will change because sum value is inside the <span style=\"\">loop</span> and <span style=\"\">variable</span> nature is that it updates the value.when condition will be <span style=\"\">false</span> then it will give us the last update value."
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "NOTE:"
                    },
                    {
                        "component": "text",
                        "value": "In do while <span style=\"\">loop</span> we have to do increment inside the do block if increment will happen out of the do block it will give you <span style=\"\">error</span>."
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Example:"
                    },
                    {
                        "component": "code",
                        "type": "javascript",
                        "title": "",
                        "value": "let v=0<br>do{<br>   console.log(v)<br>}<br>v++<br>while(v<=3)<br> <br>// Output :-<br>// SyntaxError: Unexpected identifier"
                    },
                    {
                        "component": "text",
                        "value": "In the next example, we will increment the <span style=\"\">variable</span> completely outside the do..while <span style=\"\">statement</span>."
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Example:"
                    },
                    {
                        "component": "code",
                        "type": "javascript",
                        "title": "",
                        "value": "let v=0<br>  do{<br>   console.log(v)<br>}<br>while(v<=3)<br>v++<br><br>// Output:-<br>// 0<br>// 0<br>// 0<br>// loop will run to infinity"
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Explanation:"
                    },
                    {
                        "component": "text",
                        "value": "In the first iteration, v is 0, v gets printed, 0&lt;= 3, so <span style=\"\">loop</span> runs again."
                    },
                    {
                        "component": "text",
                        "value": "In the second iteration, v is 0, v gets printed, 0&lt;= 3, so <span style=\"\">loop</span> runs again."
                    },
                    {
                        "component": "text",
                        "value": "In the third iteration, v is 0, v gets printed, 0&lt;= 3, so <span style=\"\">loop</span> runs again."
                    },
                    {
                        "component": "text",
                        "value": "\u2026"
                    },
                    {
                        "component": "text",
                        "value": "Do you see what is happening? v is never getting incremented. Thus this program will run to infinity."
                    }
                ]
            },
            {
                "id": "6324",
                "parent_exercise_id": "6302",
                "course_id": "213",
                "name": "Diff-between-while-loop-and-do-while-loop",
                "slug": "js-loops_json__Types-of-loops/Diff-between-while-loop-and-do-while-loop_json",
                "sequence_num": 303,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/js-loops_json/Types-of-loops/Diff-between-while-loop-and-do-while-loop.json",
                "solution": null,
                "content": [
                    {
                        "component": "code",
                        "type": "javascript",
                        "title": "",
                        "value": "let i=2<br>do{<br>   console.log(i);<br>}<br>while (i >10)<br> <br> <br>while(i>10){<br>   console.log(i);<br>}<br><br>// Output:<br>// 2"
                    },
                    {
                        "component": "text",
                        "value": "From do while : 2"
                    },
                    {
                        "component": "text",
                        "value": "From while : nothing will print"
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Explanation:"
                    },
                    {
                        "component": "text",
                        "value": "In the above example, if you see from do while it is printed 2  because in do while first it won\u2019t check <span style=\"\">loop</span> condition and it will run <span style=\"\">loop</span> for 1 time and after a while it will check the <span style=\"\">loop</span> condition i&gt; 10 means 2&gt;10 which is <span style=\"\">false</span>.  So, it will never run."
                    },
                    {
                        "component": "text",
                        "value": "In the while <span style=\"\">loop</span> it will check the <span style=\"\">loop</span> condition first. It is <span style=\"\">false</span> so it won\u2019t <span style=\"\">execute</span> a block of <span style=\"\">code</span> written inside that, so that\u2019s why it won\u2019t print anything."
                    }
                ]
            },
            {
                "id": "6320",
                "parent_exercise_id": "6302",
                "course_id": "213",
                "name": "For-in-loop",
                "slug": "js-loops_json__Types-of-loops/For-in-loop_json",
                "sequence_num": 304,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/js-loops_json/Types-of-loops/For-in-loop.json",
                "solution": null,
                "content": [
                    {
                        "component": "text",
                        "value": "for in <span style=\"\">loop</span> is a special type of <span style=\"\">loop</span> that iterates over the object or an array of elements."
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Example:"
                    },
                    {
                        "component": "code",
                        "type": "javascript",
                        "title": "",
                        "value": "var cars = [\"Maruti\", \"Mercedes\", \"BMW\"];<br>for (car in cars){<br>   console.log(cars[car]),<br>}<br><br>// Output:<br>// Maruti<br>// Mercedes<br>// BMW"
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Explanation:"
                    },
                    {
                        "component": "text",
                        "value": "By for in when you are <span style=\"\">loop</span>ing on an array, in the car each time its <span style=\"\">key</span> (index number) will come like 0, 1 ,2 respectively. "
                    },
                    {
                        "component": "text",
                        "value": "When the first time <span style=\"\">loop</span> is running the car value is 0, we said to print cars[car] means cars[0] so it prints Maruti because in the zeroth position of cars we have Maruthi."
                    },
                    {
                        "component": "text",
                        "value": "When the second time <span style=\"\">loop</span> is running, the car value is 1, we said to print cars[car] means cars[1] so it print Mercedes because in the first position of cars we have Mercedes."
                    },
                    {
                        "component": "text",
                        "value": "When the third time <span style=\"\">loop</span> is running, the car value is 2, we said to print cars[car] means cars[2] so it prints BMW because in the first position of cars we have BMW."
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Example:"
                    },
                    {
                        "component": "code",
                        "type": "javascript",
                        "title": "",
                        "value": "const campus_list=[\"Bangalore\",\"Dharamshala\",\"Pune\",\"Bangalore_another\"]<br>for(let campus in campus_list){<br>   console.log(campus)<br>}<br><br>// Output: <br>// 0<br>// 1<br>// 2<br>// 3<br>"
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Explanation:"
                    },
                    {
                        "component": "text",
                        "value": "By for in when you are <span style=\"\">loop</span>ing  on Array, in  the campus each time its <span style=\"\">key</span> (index number) will come like 0,1 ,2, 3 respectively. "
                    },
                    {
                        "component": "text",
                        "value": "In the above example, we used index number to get element from list. In this cureent example we prinnted the index number only be the varibale campus, and in the campus 0, 1, 2, 3 will come respectively."
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "For more understanding about for in <span style=\"\">loop</span> go through this link:"
                    },
                    {
                        "component": "text",
                        "value": "<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for\u2026in\">click here</a>",
                        "decoration": {
                            "type": "bullet"
                        }
                    }
                ]
            },
            {
                "id": "6321",
                "parent_exercise_id": "6302",
                "course_id": "213",
                "name": "For-of-loop",
                "slug": "js-loops_json__Types-of-loops/For-of-loop_json",
                "sequence_num": 305,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/js-loops_json/Types-of-loops/For-of-loop.json",
                "solution": null,
                "content": [
                    {
                        "component": "text",
                        "value": "<span style=\"\">Loops</span> over iterable objects such as array ."
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Example:"
                    },
                    {
                        "component": "code",
                        "type": "javascript",
                        "title": "",
                        "value": "let name=[\"komal\",\"shweta\",\"rani\",\"swati\",\"mahi\",\"shanti\",\"sarmistha\"]<br>for(let lname of name){<br>   console.log(lname);<br>}<br><br>// Output: <br>// komal<br>// shweta<br>// rani<br>// swati<br>// mahi    <br>// shanti<br>// sarmistha<br>"
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Explanation:"
                    },
                    {
                        "component": "text",
                        "value": "By for of <span style=\"\">loop</span>, when we are <span style=\"\">loop</span>ing on array, in lname we will get the each element one by one, like \"komal\",\"shweta\",\"rani\",\"swati\",\"mahi\",\"shanti\",\"sarmistha\" respectively."
                    },
                    {
                        "component": "text",
                        "value": "When the <span style=\"\">loop</span> is running for first time, lname value is \u201ckomal\u201d, we asked to print lname only, it prints komal."
                    },
                    {
                        "component": "text",
                        "value": "When the <span style=\"\">loop</span> is running for second time, lname value is \u201cshweta\u201d, we asked to print lname only, it prints shweta."
                    },
                    {
                        "component": "text",
                        "value": "When the <span style=\"\">loop</span> is running for third time, lname value is \u201crani\u201d, we asked to print lname only, it prints rani."
                    },
                    {
                        "component": "text",
                        "value": "When the <span style=\"\">loop</span> is running for fourth time, lname value is \u201cswati\u201d, we asked to print lname only, it prints swati."
                    },
                    {
                        "component": "text",
                        "value": "When the <span style=\"\">loop</span> is running for fifth time, lname value is \u201cmahi\u201d, we asked to print lname only, it prints mahi."
                    },
                    {
                        "component": "text",
                        "value": "When the <span style=\"\">loop</span> is running for sixth time, lname value is \u201cshanti\u201d, we asked to print lname only, it prints shanti."
                    },
                    {
                        "component": "text",
                        "value": "When the <span style=\"\">loop</span> is running for seventh time, lname value is \u201csarmistha\u201d, we asked to print lname only, it prints sarmistha."
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Example:"
                    },
                    {
                        "component": "code",
                        "type": "javascript",
                        "title": "",
                        "value": "arr=[\"a\",\"b\",\"g\",\"r\",\"t\"]<br>for(let character of arr){<br>console.log(character);<br>}<br><br>// Output:<br><br>// a<br>// b<br>// g<br>// r<br>// t   <br>"
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Explanation:"
                    },
                    {
                        "component": "text",
                        "value": "By for of <span style=\"\">loop</span>, when we are <span style=\"\">loop</span>ing on array, in character we will get the each element one by one, like \"a\",\"b\",\"g\",\"r\",\"t\" respectively."
                    },
                    {
                        "component": "text",
                        "value": "When the <span style=\"\">loop</span> is running for first time, character value is \"a\", we asked to print character only, it prints a."
                    },
                    {
                        "component": "text",
                        "value": "When the <span style=\"\">loop</span> is running for second time, character value is \u201cb\u201d, we asked to print character only, it prints b."
                    },
                    {
                        "component": "text",
                        "value": "When the <span style=\"\">loop</span> is running for third time, character value is \"g\", we asked to print character only, it prints g."
                    },
                    {
                        "component": "text",
                        "value": "When the <span style=\"\">loop</span> is running for fourth time, character value is \"r\", we asked to print character only, it prints r."
                    },
                    {
                        "component": "text",
                        "value": "When the <span style=\"\">loop</span> is running for fifth time, character value is \"t\", we asked to print character only, it prints t."
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Example:"
                    },
                    {
                        "component": "code",
                        "type": "javascript",
                        "title": "",
                        "value": "number_list=[23,\"maan\",67,\"gouri\",90,45,34]<br>for(let num of number_list){<br>console.log(num);<br>}<br> <br><br>// Output: <br><br>// 23<br>// maan<br>// 67<br>// gouri        <br>// 90<br>// 45<br>// 34<br>"
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Explanation:"
                    },
                    {
                        "component": "text",
                        "value": "By for of <span style=\"\">loop</span>, when we are <span style=\"\">loop</span>ing on an array named as number_list, in num we will get each element one by one, like 23, \u201cmaan\u201d, 67, \u201cgouri\u201d, 90, 45, 34 respectively."
                    },
                    {
                        "component": "text",
                        "value": "When the <span style=\"\">loop</span> is running for the first time, the num value is 23, we asked to print num only, it prints 23."
                    },
                    {
                        "component": "text",
                        "value": "When the <span style=\"\">loop</span> is running for a second time, the num value is \u201cmaan\u201d. We asked to print num only, it prints maan."
                    },
                    {
                        "component": "text",
                        "value": "When the <span style=\"\">loop</span> is running for the third time, the num value is 67, we asked to print num only, it prints 67."
                    },
                    {
                        "component": "text",
                        "value": "When the <span style=\"\">loop</span> is running for the fourth time, the num value is \u201cgouri\u201d. We asked to print num only, it prints gouri."
                    },
                    {
                        "component": "text",
                        "value": "When the <span style=\"\">loop</span> is running for the fifth time, the num value is 90, we asked to print num only, it prints mahi."
                    },
                    {
                        "component": "text",
                        "value": "When the <span style=\"\">loop</span> is running for the sixth time, the num value is 45, we asked to print num only, it prints shanti."
                    },
                    {
                        "component": "text",
                        "value": "When the <span style=\"\">loop</span> is running for the seventh time, the num value is 34, we asked to print num only, it prints 34."
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Example:"
                    },
                    {
                        "component": "code",
                        "type": "javascript",
                        "title": "",
                        "value": "<br>let obj={\"name\":\"sharmistha\",\"age\":21,\"hobby\":\"watching movie\",<br>   \"goal\":\"fullstack_developer\"}<br>for(let prop of obj){<br>   console.log(prop)<br>}<br> <br><br>//  Output:<br><br>// TypeError: obj is not iterable.<br>"
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Explanation:"
                    },
                    {
                        "component": "text",
                        "value": "The for of <span style=\"\">loop</span> doesn\u2019t work with an object because it only works  with arrays.<br>you want to iterate over the properties(<span style=\"\">key</span>,value pair) of the object you can use for in <span style=\"\">loop</span>."
                    }
                ]
            },
            {
                "id": "6322",
                "parent_exercise_id": "6302",
                "course_id": "213",
                "name": "Difference-between-for(in)-and-for(of)",
                "slug": "js-loops_json__Types-of-loops/Difference-between-for(in)-and-for(of)_json",
                "sequence_num": 306,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/js-loops_json/Types-of-loops/Difference-between-for(in)-and-for(of).json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Example:"
                    },
                    {
                        "component": "code",
                        "type": "javascript",
                        "title": "",
                        "value": "<br>let Navgurukul = ['Pune', 'Bangalore', 'Sarjapur'];<br><br>// cmpKey are the property keys<br>for (let cmpKey in Navgurukul) {<br> console.log(cmpKey);<br>}<br>console.log(\u201c------------------\u201d)<br>// cmpValue are the property values<br>for (let cmpValue of Navgurukul) {<br> console.log(cmpValue)<br>}<br><br>// Output:<br><br>// 0<br>// 1<br>// 2<br>// ------------------------<br>// Pune<br>// Bangalore<br>// Sarjapur<br>"
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Explanation:"
                    },
                    {
                        "component": "text",
                        "value": "for (let cmp<span style=\"\">Key</span> in Navgurukul) here cmp<span style=\"\">Key</span> is the <span style=\"\">variable</span> because of for in <span style=\"\">loop</span> in cmp<span style=\"\">Key</span> we will get index numbers only as 0, 1, 2 respectively."
                    },
                    {
                        "component": "text",
                        "value": "for (let cmpValue of Navgurukul) here cmpValue is the <span style=\"\">variable</span> because of for of in cmpValue we will get elements as values directly as Pune, Bangalore, Sarjapur."
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "Note:"
                    },
                    {
                        "component": "text",
                        "value": "For in <span style=\"\">loop</span> iterates on the <span style=\"\">keys</span> or indexes that are there in the list but for of <span style=\"\">loop</span> will run on the values. And for in will work on objects too but for of can\u2019t."
                    },
                    {
                        "component": "code",
                        "type": "javascript",
                        "title": "",
                        "value": "const campus={\"camp_name\":\"Bangalore_campus\",\"establish\":2016,\"election\":\"three_months\"}<br>for(let pro in campus){<br> console.log(campus[pro])<br>}<br><br>console.log(\"--------------\");<br> <br>for(let pro of campus){<br> console.log(pro)<br>}<br> <br>// Output:<br>// Bangalore_campus<br>// 2016<br>// three_months<br>// --------------<br>// It will throw an error because for of can\u2019t iterate through objects.<br>"
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Explanation"
                    },
                    {
                        "component": "text",
                        "value": "for(let pro in campus) in this <span style=\"\">code</span> for in can iterate on objects and in the <span style=\"\">variable</span> pro we will get <span style=\"\">keys</span> directly as camp<i>name, es<span style=\"\">tab</span>lish, election and used those <span style=\"\">keys</span> and got the values as Bangalore</i>campus, 2016, three_months respectively."
                    },
                    {
                        "component": "text",
                        "value": "for(let pro of campus) it will give <span style=\"\">error</span> because for of can't run <span style=\"\">loop</span> on objects,"
                    }
                ]
            },
            {
                "id": "6325",
                "parent_exercise_id": "6302",
                "course_id": "213",
                "name": "Some-more",
                "slug": "js-loops_json__Types-of-loops/Some-more_json",
                "sequence_num": 307,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/js-loops_json/Types-of-loops/Some-more.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Find length of object"
                    },
                    {
                        "component": "text",
                        "value": "To find the length of an object we can use builtin functions Object.<span style=\"\">keys</span>() either we can use  Object.values()."
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Example:"
                    },
                    {
                        "component": "code",
                        "type": "javascript",
                        "title": "",
                        "value": "const birds={name:\"Bald Eagle\",type:\"Hawk\",ScientificName:\"HaliaeetusLeucocephalus\"}<br>          <br>console.log(Object.keys(birds).length)<br><br>// Output: <br>// 3<br>"
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "Explanation:"
                    },
                    {
                        "component": "text",
                        "value": "Object.<span style=\"\">keys</span>(objectName) will give you the list of property names."
                    },
                    {
                        "component": "text",
                        "value": "So, Object.<span style=\"\">keys</span>(birds) will give me the list i.e., "
                    },
                    {
                        "component": "text",
                        "value": "[ 'name', 'type', 'ScientificName' ]<br>And when we use length on it , it gives 3. hooray!\u2026.."
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "Note:"
                    },
                    {
                        "component": "text",
                        "value": "Object.<span style=\"\">keys</span>(objectName) will give you the list of property names."
                    },
                    {
                        "component": "text",
                        "value": "Object.values(objectName) will give you the list of values."
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Example:"
                    },
                    {
                        "component": "code",
                        "type": "javascript",
                        "title": "",
                        "value": "const birds={name:\"Bald Eagle\",type:\"Hawk\",<br>   ScientificName:\"HaliaeetusLeucocephalus\"}<br>          <br>console.log(Object.values(birds).length)<br>      <br><br>// Output: <br>//  3<br>"
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "Explanation:"
                    },
                    {
                        "component": "text",
                        "value": "Object.values(objectName) will give you the list of property values."
                    },
                    {
                        "component": "text",
                        "value": "So, Object.<span style=\"\">keys</span>(birds) will give me the list i.e., "
                    },
                    {
                        "component": "text",
                        "value": "[ 'Bald Eagle', 'Hawk', 'HaliaeetusLeucocephalus' ]<br>And when we use length on it , it gives 3. hooray!\u2026.."
                    }
                ]
            },
            {
                "id": "6301",
                "parent_exercise_id": "6301",
                "course_id": "213",
                "name": "Question1",
                "slug": "js-loops_json__Exercises-code_output/Question1_json",
                "sequence_num": 400,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/js-loops_json/Exercises-code_output/Question1.json",
                "solution": null,
                "content": [
                    {
                        "component": "text",
                        "value": "Program to check whether a given <span style=\"\">string</span> is a palindrome or not."
                    },
                    {
                        "component": "text",
                        "value": "What is the <span style=\"\">output</span> of the following program?"
                    },
                    {
                        "component": "code",
                        "type": "javascript",
                        "title": "",
                        "value": "// enter name: kumar and tell us the what is the output will come<br>const n=require(\"readline-sync\");<br>var name=n.question(\"enter name: \")<br>const store=name;<br>var string=\"\"<br>for (let i=name.length-1;i>=0;i--) {<br>   string=string+name[i]<br>}<br>if (store===string) {<br>   console.log(\"its palindrome string\")<br>}<br>else {<br>   console.log(\"it's not a palindrome string\")<br>}"
                    }
                ]
            },
            {
                "id": "6305",
                "parent_exercise_id": "6301",
                "course_id": "213",
                "name": "Question2",
                "slug": "js-loops_json__Exercises-code_output/Question2_json",
                "sequence_num": 401,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/js-loops_json/Exercises-code_output/Question2.json",
                "solution": null,
                "content": [
                    {
                        "component": "text",
                        "value": "Program to check whether the given number is a prime or not?"
                    },
                    {
                        "component": "code",
                        "type": "javascript",
                        "title": "",
                        "value": "// take input 3 and find out the ouput by following the code line by line<br>var n=require(\"readline-sync\");<br>const num=n.question(\"enter number: \");<br>let i=2<br>var count=0;<br>while (i<num) {<br>       if (num%i===0) {<br>       count=count+1<br>       }<br>       i++;<br>}<br>if (count===0) {<br>       console.log(\"prime number\")<br>}<br>else {<br>   console.log(\"not prime number\")<br>}"
                    }
                ]
            },
            {
                "id": "6306",
                "parent_exercise_id": "6301",
                "course_id": "213",
                "name": "Question3",
                "slug": "js-loops_json__Exercises-code_output/Question3_json",
                "sequence_num": 402,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/js-loops_json/Exercises-code_output/Question3.json",
                "solution": null,
                "content": [
                    {
                        "component": "text",
                        "value": "What is the ouput of the following <span style=\"\">code</span>?"
                    },
                    {
                        "component": "code",
                        "type": "javascript",
                        "title": "",
                        "value": "for (var i=0;i<10;) {<br>   console.log(i)<br>}"
                    }
                ]
            },
            {
                "id": "6308",
                "parent_exercise_id": "6301",
                "course_id": "213",
                "name": "Question4",
                "slug": "js-loops_json__Exercises-code_output/Question4_json",
                "sequence_num": 403,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/js-loops_json/Exercises-code_output/Question4.json",
                "solution": null,
                "content": [
                    {
                        "component": "text",
                        "value": "Program to print <span style=\"\">tab</span>le of a given number"
                    },
                    {
                        "component": "code",
                        "type": "javascript",
                        "title": "",
                        "value": "// take n as 2 and tell the output<br>let n=require(\"readline-sync\");<br>let num=parseInt(n.question(\"enter number: \"));<br>for (let i=1;i<=10;i++) {<br>       multi=num*i;<br>       console.log(num + \" *\" + i + \"=\" + multi)<br>   }"
                    }
                ]
            },
            {
                "id": "6307",
                "parent_exercise_id": "6301",
                "course_id": "213",
                "name": "Question5",
                "slug": "js-loops_json__Exercises-code_output/Question5_json",
                "sequence_num": 404,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/js-loops_json/Exercises-code_output/Question5.json",
                "solution": null,
                "content": [
                    {
                        "component": "text",
                        "value": "Given a <span style=\"\">string</span>, write a program to check if it is palindrome or not. "
                    },
                    {
                        "component": "text",
                        "value": "A <span style=\"\">string</span> is said to be palindrome if the reverse of the <span style=\"\">string</span> is the same as the <span style=\"\">string</span>. "
                    },
                    {
                        "component": "text",
                        "value": "For example :"
                    },
                    {
                        "component": "text",
                        "value": "\u201cRADAR\u201d is a palindrome, but \u201cRADIX\u201d is not a palindrome"
                    },
                    {
                        "component": "code",
                        "type": "javascript",
                        "title": "",
                        "value": "// please write code here"
                    }
                ]
            },
            {
                "id": "6310",
                "parent_exercise_id": "6301",
                "course_id": "213",
                "name": "Question6",
                "slug": "js-loops_json__Exercises-code_output/Question6_json",
                "sequence_num": 405,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/js-loops_json/Exercises-code_output/Question6.json",
                "solution": null,
                "content": [
                    {
                        "component": "text",
                        "value": "write a program to console all the numbers from 1 to 100."
                    },
                    {
                        "component": "text",
                        "value": "Sample : <span style=\"\">Input</span> 100"
                    },
                    {
                        "component": "text",
                        "value": "Sample <span style=\"\">output</span> : "
                    },
                    {
                        "component": "text",
                        "value": "1<br>2 <br>3 <br>4 <br>5 <br>6 <br>\u2026 <br>\u2026\u2026\u2026<br>\u2026\u2026\u2026<br>100"
                    },
                    {
                        "component": "code",
                        "type": "javascript",
                        "title": "",
                        "value": "// please write code here"
                    }
                ]
            },
            {
                "id": "6316",
                "parent_exercise_id": "6301",
                "course_id": "213",
                "name": "Question7",
                "slug": "js-loops_json__Exercises-code_output/Question7_json",
                "sequence_num": 406,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/js-loops_json/Exercises-code_output/Question7.json",
                "solution": null,
                "content": [
                    {
                        "component": "text",
                        "value": "Write a program to console numbers between 1 to 100 which are divisible by 7."
                    },
                    {
                        "component": "text",
                        "value": "Sample :  <span style=\"\">input</span>  100"
                    },
                    {
                        "component": "text",
                        "value": "Sample  <span style=\"\">output</span> : <br>7 "
                    },
                    {
                        "component": "text",
                        "value": "14 "
                    },
                    {
                        "component": "text",
                        "value": "21 "
                    },
                    {
                        "component": "text",
                        "value": "28 Write a program to console numbers between 1 to 100 which are divisible by 7.<br>Sample :  <span style=\"\">input</span>  100<br>Sample :  <span style=\"\">output</span>  7 14 21 28 35 42 56 63 70 77 84 91 98"
                    },
                    {
                        "component": "text",
                        "value": "35 "
                    },
                    {
                        "component": "text",
                        "value": "42 "
                    },
                    {
                        "component": "text",
                        "value": "56 "
                    },
                    {
                        "component": "text",
                        "value": "63 "
                    },
                    {
                        "component": "text",
                        "value": "70 "
                    },
                    {
                        "component": "text",
                        "value": "77 "
                    },
                    {
                        "component": "text",
                        "value": "84 "
                    },
                    {
                        "component": "text",
                        "value": "91 "
                    },
                    {
                        "component": "text",
                        "value": "98"
                    },
                    {
                        "component": "code",
                        "type": "javascript",
                        "title": "",
                        "value": "// please write code here"
                    }
                ]
            },
            {
                "id": "6309",
                "parent_exercise_id": "6301",
                "course_id": "213",
                "name": "Question8",
                "slug": "js-loops_json__Exercises-code_output/Question8_json",
                "sequence_num": 407,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/js-loops_json/Exercises-code_output/Question8.json",
                "solution": null,
                "content": [
                    {
                        "component": "text",
                        "value": "Write a  program to calculate the sum of the numbers of 1 to 100 . "
                    },
                    {
                        "component": "text",
                        "value": "Like this 1+2+3+4 +5+6+7\u2026.+95+96+97+98+99+100  "
                    },
                    {
                        "component": "text",
                        "value": "then console sum of the numbers."
                    },
                    {
                        "component": "text",
                        "value": "Sample :  <span style=\"\">input</span>  100<br>Samput : <span style=\"\">output</span>  5050"
                    },
                    {
                        "component": "code",
                        "type": "javascript",
                        "title": "",
                        "value": "// please write code here"
                    }
                ]
            },
            {
                "id": "6311",
                "parent_exercise_id": "6301",
                "course_id": "213",
                "name": "Question9",
                "slug": "js-loops_json__Exercises-code_output/Question9_json",
                "sequence_num": 408,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/js-loops_json/Exercises-code_output/Question9.json",
                "solution": null,
                "content": [
                    {
                        "component": "text",
                        "value": "Create a <span style=\"\">loop</span> that takes 10 numbers as <span style=\"\">input</span> from the user. "
                    },
                    {
                        "component": "text",
                        "value": "After taking the <span style=\"\">input</span> console the sum of all those numbers. "
                    },
                    {
                        "component": "text",
                        "value": "This program will go like this. Each time using readline-sync will take a number <span style=\"\">input</span> from the user.  "
                    },
                    {
                        "component": "text",
                        "value": "Sample : <span style=\"\">input</span> 10"
                    },
                    {
                        "component": "text",
                        "value": "Then for example 10+16+9+10+56+78+98+43+21+76.. Total sum of number 417 "
                    },
                    {
                        "component": "text",
                        "value": "Sample : <span style=\"\">output</span>  417"
                    },
                    {
                        "component": "code",
                        "type": "javascript",
                        "title": "",
                        "value": "// please write code here"
                    }
                ]
            },
            {
                "id": "6312",
                "parent_exercise_id": "6301",
                "course_id": "213",
                "name": "Question10",
                "slug": "js-loops_json__Exercises-code_output/Question10_json",
                "sequence_num": 409,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/js-loops_json/Exercises-code_output/Question10.json",
                "solution": null,
                "content": [
                    {
                        "component": "text",
                        "value": "console this pattern using a <span style=\"\">loop</span>. 1, -2, 3, -4, 5, -6 ..99, -100"
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "Hint"
                    },
                    {
                        "component": "text",
                        "value": "Notice how the first number is positive, the second number negative, then the positive number and then the negative number. Pattern means positive (+) number, negative (-) number, positive (+) number, negative (-) number etc. And remember that we can make any number negative of any number by multiplying it by -1. "
                    },
                    {
                        "component": "text",
                        "value": "Can you write this program using this hint?"
                    },
                    {
                        "component": "code",
                        "type": "javascript",
                        "title": "",
                        "value": "// please write code here"
                    }
                ]
            },
            {
                "id": "6313",
                "parent_exercise_id": "6301",
                "course_id": "213",
                "name": "Question11",
                "slug": "js-loops_json__Exercises-code_output/Question11_json",
                "sequence_num": 410,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/js-loops_json/Exercises-code_output/Question11.json",
                "solution": null,
                "content": [
                    {
                        "component": "text",
                        "value": "Write a program where it will do the following things with 1 to 20 numbers:"
                    },
                    {
                        "component": "text",
                        "value": "When number is divisible by 3 print \u201cNav\u201d"
                    },
                    {
                        "component": "text",
                        "value": "When number is divisible by 7 print \u201cGurukul\u201d"
                    },
                    {
                        "component": "text",
                        "value": "The numbers which is divisible by 3 and 7 print \u201cNavGurukul\u201d"
                    },
                    {
                        "component": "text",
                        "value": "If it is not coming in any case above print number only."
                    },
                    {
                        "component": "text",
                        "value": "<span style=\"\">Output</span>:<br>1"
                    },
                    {
                        "component": "text",
                        "value": "2"
                    },
                    {
                        "component": "text",
                        "value": "Nav"
                    },
                    {
                        "component": "text",
                        "value": "4"
                    },
                    {
                        "component": "text",
                        "value": "5"
                    },
                    {
                        "component": "text",
                        "value": "Nav"
                    },
                    {
                        "component": "text",
                        "value": "Gurukul"
                    },
                    {
                        "component": "text",
                        "value": "8"
                    },
                    {
                        "component": "text",
                        "value": "Nav"
                    },
                    {
                        "component": "text",
                        "value": "10"
                    },
                    {
                        "component": "text",
                        "value": "11"
                    },
                    {
                        "component": "text",
                        "value": "Nav"
                    },
                    {
                        "component": "text",
                        "value": "13"
                    },
                    {
                        "component": "text",
                        "value": "Gurukul"
                    },
                    {
                        "component": "text",
                        "value": "Nav"
                    },
                    {
                        "component": "text",
                        "value": "16"
                    },
                    {
                        "component": "text",
                        "value": "17"
                    },
                    {
                        "component": "text",
                        "value": "Nav"
                    },
                    {
                        "component": "text",
                        "value": "19"
                    },
                    {
                        "component": "text",
                        "value": "20"
                    },
                    {
                        "component": "code",
                        "type": "javascript",
                        "title": "",
                        "value": "// please write code here"
                    }
                ]
            },
            {
                "id": "6314",
                "parent_exercise_id": "6301",
                "course_id": "213",
                "name": "Question12",
                "slug": "js-loops_json__Exercises-code_output/Question12_json",
                "sequence_num": 411,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/js-loops_json/Exercises-code_output/Question12.json",
                "solution": null,
                "content": [
                    {
                        "component": "text",
                        "value": "Write a program to take 10 user <span style=\"\">input</span>, and print the sum of that 10 <span style=\"\">inputs</span>."
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "Note:"
                    },
                    {
                        "component": "text",
                        "value": "For this program you need to initialize with 50, and try to use decrement and run <span style=\"\">loop</span>."
                    },
                    {
                        "component": "text",
                        "value": "Program may run like this. Everytime by using readline sync we will take an <span style=\"\">input</span>."
                    },
                    {
                        "component": "text",
                        "value": "Koi bhi number daaliye &gt; 10"
                    },
                    {
                        "component": "text",
                        "value": "Koi bhi number daaliye &gt; 16"
                    },
                    {
                        "component": "text",
                        "value": "Koi bhi number daaliye &gt; 9"
                    },
                    {
                        "component": "text",
                        "value": "Koi bhi number daaliye &gt; 10"
                    },
                    {
                        "component": "text",
                        "value": "Koi bhi number daaliye &gt; 56"
                    },
                    {
                        "component": "text",
                        "value": "Koi bhi number daaliye &gt; 78"
                    },
                    {
                        "component": "text",
                        "value": "Koi bhi number daaliye &gt; 98"
                    },
                    {
                        "component": "text",
                        "value": "Koi bhi number daaliye &gt; 43"
                    },
                    {
                        "component": "text",
                        "value": "Koi bhi number daaliye &gt; 21"
                    },
                    {
                        "component": "text",
                        "value": "Koi bhi number daaliye &gt; 76"
                    },
                    {
                        "component": "text",
                        "value": "Total Sum: 417"
                    },
                    {
                        "component": "text",
                        "value": "In the final line we print Total Sum: 417. "
                    },
                    {
                        "component": "text",
                        "value": "This one prints 417 because 10+16+9+10+56+78+98+43+21+76 ka sum 417 hai."
                    },
                    {
                        "component": "code",
                        "type": "javascript",
                        "title": "",
                        "value": "// please write code here"
                    }
                ]
            },
            {
                "id": "6315",
                "parent_exercise_id": "6301",
                "course_id": "213",
                "name": "Question13",
                "slug": "js-loops_json__Exercises-code_output/Question13_json",
                "sequence_num": 412,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/js-loops_json/Exercises-code_output/Question13.json",
                "solution": null,
                "content": [
                    {
                        "component": "text",
                        "value": "Print 1 to 10 numbers, but start initialization with 156."
                    },
                    {
                        "component": "code",
                        "type": "javascript",
                        "title": "",
                        "value": "// please write code here"
                    }
                ]
            },
            {
                "id": "6317",
                "parent_exercise_id": "6301",
                "course_id": "213",
                "name": "Question14",
                "slug": "js-loops_json__Exercises-code_output/Question14_json",
                "sequence_num": 413,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/js-loops_json/Exercises-code_output/Question14.json",
                "solution": null,
                "content": [
                    {
                        "component": "text",
                        "value": "Try to print this pattern"
                    },
                    {
                        "component": "text",
                        "value": "5 5 5 5 5"
                    },
                    {
                        "component": "text",
                        "value": "4 4 4 4 4"
                    },
                    {
                        "component": "text",
                        "value": "3 3 3 3 3"
                    },
                    {
                        "component": "text",
                        "value": "2 2 2 2 2"
                    },
                    {
                        "component": "text",
                        "value": "1 1 1 1 1"
                    },
                    {
                        "component": "code",
                        "type": "javascript",
                        "title": "",
                        "value": "// please write code here"
                    }
                ]
            },
            {
                "id": "6303",
                "parent_exercise_id": "6303",
                "course_id": "213",
                "name": "Question1",
                "slug": "js-loops_json__Exercises-Debug/Question1_json",
                "sequence_num": 500,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/js-loops_json/Exercises-Debug/Question1.json",
                "solution": null,
                "content": [
                    {
                        "component": "text",
                        "value": "Debug the <span style=\"\">code</span> as per the given sample <span style=\"\">input</span> and <span style=\"\">output</span>"
                    },
                    {
                        "component": "text",
                        "value": "Sample <span style=\"\">Input</span>: if i give <span style=\"\">input</span> 2 it needs to give characters a and b because 95 is the ascii character of a, and 96 is the ascii character of b. <span style=\"\">Loop</span> needs to run from 95 to those many times that user entered."
                    },
                    {
                        "component": "text",
                        "value": "<span style=\"\">Input</span> 3<br><span style=\"\">Output</span>: a b c"
                    },
                    {
                        "component": "code",
                        "type": "javascript",
                        "title": "",
                        "value": "let n=require(\"readline-sync\");<br>let choose_ascii=(n.question(\"enter number: \"));<br>var ascii_char=97+choose_ascii<br>for (var i=97;i<=ascii_char;i++) {<br>       console.log(chr(i),end=\"\");<br>}<br>"
                    }
                ]
            },
            {
                "id": "6318",
                "parent_exercise_id": "6303",
                "course_id": "213",
                "name": "Question2",
                "slug": "js-loops_json__Exercises-Debug/Question2_json",
                "sequence_num": 501,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/js-loops_json/Exercises-Debug/Question2.json",
                "solution": null,
                "content": [
                    {
                        "component": "text",
                        "value": "Print the maximum number in between the numbers given by user?"
                    },
                    {
                        "component": "text",
                        "value": "if <span style=\"\">loop</span>_time <span style=\"\">input</span> is given 3, 3 times <span style=\"\">input</span> need to give for making a list with 3 elements and need to find max from the list."
                    },
                    {
                        "component": "text",
                        "value": "Debug the <span style=\"\">code</span> if anythinng wrong is there?"
                    },
                    {
                        "component": "code",
                        "type": "javascript",
                        "title": "",
                        "value": "let c=require(\"readline-sync\");<br>let loop_time=c.question(\"enter loop time: \");<br> <br>var maxi=0;<br>let lis=[ ]<br>for (let i=1;i<=loop_time;i++) {<br>   let num=c.question(\"enter number: \")<br>   lis.append(num)<br>}<br>var maxi=lis[0];<br>for (let j=0;j<lis:length;j==) {<br>   if (maxi<lis[j]) {<br>       [maxi=lis[j]]<br>   }<br> <br>}<br>console.log(maxi)<br>"
                    }
                ]
            },
            {
                "id": "6326",
                "parent_exercise_id": "6303",
                "course_id": "213",
                "name": "Question3",
                "slug": "js-loops_json__Exercises-Debug/Question3_json",
                "sequence_num": 502,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/js-loops_json/Exercises-Debug/Question3.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Third"
                    },
                    {
                        "component": "text",
                        "value": "Debug the <span style=\"\">code</span> as per the given <span style=\"\">output</span>"
                    },
                    {
                        "component": "text",
                        "value": "<span style=\"\">Output</span> should be "
                    },
                    {
                        "component": "text",
                        "value": "max-length"
                    },
                    {
                        "component": "text",
                        "value": "no-amd"
                    },
                    {
                        "component": "text",
                        "value": "prefer-arrow-functions"
                    },
                    {
                        "component": "code",
                        "type": "javascript",
                        "title": "",
                        "value": "const result = {<br>   success: [\"max-length\", \"no-amd\" \u201cprefer-arrow-functions\u201d],<br>   failure: [\"no-var\", \"var-on-top\", \"linebreak\"]:<br>   skipped: [\"no-extra-semi\", \"no-dup-keys\"]<br> };<br><br><br>const success=result.success<br>const store=success,length<br>for(const value in success){<br>  console.log(store[value])<br>}"
                    }
                ]
            },
            {
                "id": "6304",
                "parent_exercise_id": "6304",
                "course_id": "213",
                "name": "Project",
                "slug": "js-loops_json__Project2/Project_json",
                "sequence_num": 600,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/js-loops_json/Project2/Project.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Project2"
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Guessing game"
                    },
                    {
                        "component": "text",
                        "value": "The game is about guessing a number between 1 to 10, you can choose how many times you want to guess and guess those many times, if you are able to guess the secret number you won the game, or if your chances are completed means you completely lost the game. Are you ready to play the game?"
                    },
                    {
                        "component": "text",
                        "value": "Let\u2019s play the game and understand with fun:<a href=\"https://www.funbrain.com/games/guess-the-number\">online game</a>"
                    },
                    {
                        "component": "code",
                        "type": "javascript",
                        "title": "",
                        "value": "// please write code here"
                    }
                ]
            }
        ]
    }
}